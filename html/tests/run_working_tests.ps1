# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–æ–ª—å–∫–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –∏ —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö —Ç–µ—Å—Ç–æ–≤
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\run_working_tests.ps1

param(
    [switch]$Verbose,
    [switch]$Help
)

if ($Help) {
    Write-Host @"

üß™ –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
================================================================

–ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
    .\run_working_tests.ps1 [-Verbose] [-Help]

–ü–ê–†–ê–ú–ï–¢–†–´:
    -Verbose    –ü–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥
    -Help       –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–û–ü–ò–°–ê–ù–ò–ï:
    –ó–∞–ø—É—Å–∫–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–µ —Ç–µ—Å—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –∏
    –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞—é—Ç –±–µ–∑ –æ—à–∏–±–æ–∫.

–ü–†–ò–ú–ï–†–´:
    .\run_working_tests.ps1              # –û–±—ã—á–Ω—ã–π –∑–∞–ø—É—Å–∫
    .\run_working_tests.ps1 -Verbose     # –° –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º

================================================================
"@
    exit 0
}

Write-Host ""
Write-Host "üß™ –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –∏ —Ä–∞–±–æ—Ç–∞—é—â–∏—Ö —Ç–µ—Å—Ç–æ–≤" -ForegroundColor Cyan
Write-Host "================================================================" -ForegroundColor Cyan

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏
$ScriptDir = Split-Path -Parent $MyInvocation.MyCommand.Path
$ProjectRoot = Split-Path -Parent $ScriptDir

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ PHP
try {
    $phpVersion = & php --version 2>$null
    if ($LASTEXITCODE -ne 0) {
        throw "PHP –Ω–µ –Ω–∞–π–¥–µ–Ω"
    }
    if ($Verbose) {
        Write-Host "‚úÖ PHP –Ω–∞–π–¥–µ–Ω: $($phpVersion[0])" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ùå PHP –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH" -ForegroundColor Red
    Write-Host "   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ PHP —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é PATH" -ForegroundColor Yellow
    exit 1
}

# –ü–æ–∏—Å–∫ PHPUnit
$phpunitCmd = $null
$phpunitFound = $false

if (Test-Path "$ProjectRoot\vendor\bin\phpunit.bat") {
    $phpunitCmd = "$ProjectRoot\vendor\bin\phpunit.bat"
    $phpunitFound = $true
    if ($Verbose) { Write-Host "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º PHPUnit –∏–∑ Composer" -ForegroundColor Green }
} elseif (Test-Path "$ScriptDir\phpunit.phar") {
    $phpunitCmd = "php `"$ScriptDir\phpunit.phar`""
    $phpunitFound = $true
    if ($Verbose) { Write-Host "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º phpunit.phar" -ForegroundColor Green }
} else {
    try {
        & phpunit --version 2>$null | Out-Null
        if ($LASTEXITCODE -eq 0) {
            $phpunitCmd = "phpunit"
            $phpunitFound = $true
            if ($Verbose) { Write-Host "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π PHPUnit" -ForegroundColor Green }
        }
    } catch {}
}

if (-not $phpunitFound) {
    Write-Host "‚ùå PHPUnit –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
    Write-Host "   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PHPUnit: .\run_tests.bat install-phpunit" -ForegroundColor Yellow
    exit 1
}

# –°–ø–∏—Å–æ–∫ —Ä–∞–±–æ—á–∏—Ö —Ç–µ—Å—Ç–æ–≤
$workingTests = @(
    "tests\unit\CreateGameSimpleTest.php",
    "tests\unit\DatabaseConfigTest.php",
    "tests\unit\UserTest.php",
    "tests\unit\MessageTest.php",
    "tests\unit\PlanetTest.php",
    "tests\unit\ResourceTest.php",
    "tests\unit\BuildingTest.php",
    "tests\unit\GameTest.php"
)

# –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
$totalFiles = $workingTests.Count
$passedFiles = 0
$failedFiles = 0
$totalTests = 0
$totalAssertions = 0
$startTime = Get-Date

Write-Host ""
Write-Host "üìù –°–ø–∏—Å–æ–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –∑–∞–ø—É—Å–∫–∞:" -ForegroundColor White
Write-Host "----------------------------------------------------------------" -ForegroundColor Gray
foreach ($test in $workingTests) {
    Write-Host "   ‚úì $test" -ForegroundColor Gray
}
Write-Host ""

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–∞–∂–¥—ã–π —Ç–µ—Å—Ç –æ—Ç–¥–µ–ª—å–Ω–æ
Write-Host "üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..." -ForegroundColor Cyan
Write-Host "================================================================" -ForegroundColor Cyan

Set-Location $ProjectRoot

foreach ($testFile in $workingTests) {
    Write-Host ""
    Write-Host "üìÅ –ó–∞–ø—É—Å–∫: $testFile" -ForegroundColor White
    Write-Host "----------------------------------------------------------------" -ForegroundColor Gray

    $testStartTime = Get-Date

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É
    $fullCommand = "$phpunitCmd --configuration tests\phpunit.xml --no-coverage `"$testFile`""

    if ($Verbose) {
        Write-Host "–ö–æ–º–∞–Ω–¥–∞: $fullCommand" -ForegroundColor DarkGray
    }

    try {
        # –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç
        $output = & cmd /c "$fullCommand 2>&1"
        $exitCode = $LASTEXITCODE

        if ($Verbose -or $exitCode -ne 0) {
            $output | ForEach-Object { Write-Host "   $_" -ForegroundColor DarkGray }
        }

        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if ($exitCode -eq 0) {
            Write-Host "‚úÖ –ü–†–û–ô–î–ï–ù" -ForegroundColor Green
            $passedFiles++

            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            $okLine = $output | Where-Object { $_ -match "OK \((\d+) tests?, (\d+) assertions?\)" }
            if ($okLine) {
                if ($okLine -match "OK \((\d+) tests?, (\d+) assertions?\)") {
                    $totalTests += [int]$matches[1]
                    $totalAssertions += [int]$matches[2]
                }
            }
        } else {
            Write-Host "‚ùå –ü–†–û–í–ê–õ–ï–ù (–∫–æ–¥: $exitCode)" -ForegroundColor Red
            $failedFiles++
        }

    } catch {
        Write-Host "‚ùå –û–®–ò–ë–ö–ê –í–´–ü–û–õ–ù–ï–ù–ò–Ø: $_" -ForegroundColor Red
        $failedFiles++
    }

    $testDuration = (Get-Date) - $testStartTime
    if ($Verbose) {
        Write-Host "‚è±Ô∏è  –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: $($testDuration.TotalSeconds.ToString('F2'))—Å" -ForegroundColor DarkGray
    }
}

$totalDuration = (Get-Date) - $startTime

Write-Host ""
Write-Host "================================================================" -ForegroundColor Cyan
Write-Host "üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê" -ForegroundColor Cyan
Write-Host "================================================================" -ForegroundColor Cyan

Write-Host "–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤: $totalFiles" -ForegroundColor White
Write-Host "–ü—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: $passedFiles" -ForegroundColor Green
Write-Host "–ü—Ä–æ–≤–∞–ª–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: $failedFiles" -ForegroundColor Red

if ($totalTests -gt 0) {
    Write-Host ""
    Write-Host "–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $totalTests" -ForegroundColor White
    Write-Host "–í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: $totalAssertions" -ForegroundColor White
}

Write-Host "–û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: $($totalDuration.TotalSeconds.ToString('F2'))—Å" -ForegroundColor White

if ($failedFiles -eq 0) {
    Write-Host ""
    Write-Host "üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!" -ForegroundColor Green
    Write-Host "   –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ" -ForegroundColor Green
} else {
    Write-Host ""
    Write-Host "‚ö†Ô∏è  –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´" -ForegroundColor Yellow
    Write-Host "   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ" -ForegroundColor Yellow
}

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö
Write-Host ""
Write-Host "üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤:" -ForegroundColor White
if (Test-Path "$ScriptDir\results\junit.xml") {
    Write-Host "   ‚úì JUnit –æ—Ç—á–µ—Ç: $ScriptDir\results\junit.xml" -ForegroundColor Gray
}
if (Test-Path "$ScriptDir\results\testdox.html") {
    Write-Host "   ‚úì TestDox –æ—Ç—á–µ—Ç: $ScriptDir\results\testdox.html" -ForegroundColor Gray
}

Write-Host ""
Write-Host "üí° –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:" -ForegroundColor White
Write-Host "   .\run_tests.bat --help        # –ü–æ–ª–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞ –ø–æ —Ç–µ—Å—Ç–∞–º" -ForegroundColor Gray
Write-Host "   .\run_tests.bat clean         # –û—á–∏—Å—Ç–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã" -ForegroundColor Gray
Write-Host "   .\run_working_tests.ps1       # –ü–æ–≤—Ç–æ—Ä–∏—Ç—å —ç—Ç–æ—Ç –∑–∞–ø—É—Å–∫" -ForegroundColor Gray

# –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–¥ –æ—à–∏–±–∫–∏
if ($failedFiles -gt 0) {
    exit 1
} else {
    exit 0
}
