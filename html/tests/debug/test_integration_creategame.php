<?php

/**
 * –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã —Å —Ä–µ–∞–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –∫–∞—Ä—Ç—ã
 */

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã
require_once dirname(__DIR__) . "/config.php";
require_once dirname(__DIR__) . "/vendor/autoload.php";

// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –ë–î
MyDB::setDBConfig("localhost", "civ_test", "civ_test", "3306", "civ_for_tests");



// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
require_once dirname(__DIR__) . "/tests/TestGameDataInitializer.php";
TestGameDataInitializer::initializeAll();

echo "=== –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä—ã ===\n";

try {
    $startTime = microtime(true);

    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    echo "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö...\n";
    MyDB::query("DELETE FROM resource");
    MyDB::query("DELETE FROM cell");
    MyDB::query("DELETE FROM city");
    MyDB::query("DELETE FROM unit");
    MyDB::query("DELETE FROM user");
    MyDB::query("DELETE FROM planet");
    MyDB::query("DELETE FROM game");

    // 1. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä—ã
    echo "1. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∏–≥—Ä—É...\n";
    $game = new Game([
        'name' => '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç - –±—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è',
        'map_w' => 80,
        'map_h' => 80,
        'turn_type' => 'byturn',
        'turn_num' => 1
    ]);

    $game->save();
    echo "   ‚úì –ò–≥—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞ ID: {$game->id}\n";

    // 2. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    echo "2. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...\n";
    $users = [];
    $userNames = ['–ê–ª–∏—Å–∞', '–ë–æ–±', '–ß–∞—Ä–ª–∏', '–î–∏–∞–Ω–∞'];
    $colors = ['#FF0000', '#00FF00', '#0000FF', '#FFFF00'];

    for ($i = 0; $i < 4; $i++) {
        $user = new User([
            'login' => $userNames[$i],
            'color' => $colors[$i],
            'game' => $game->id,
            'turn_order' => $i + 1,
            'money' => 50,
            'age' => 1
        ]);
        $user->save();
        $users[] = $user;
        echo "   ‚úì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{$userNames[$i]}' —Å–æ–∑–¥–∞–Ω ID: {$user->id}\n";
    }

    // 3. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π –∏–≥—Ä—ã —á–µ—Ä–µ–∑ create_new_game()
    echo "3. –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–≥—Ä—ã...\n";
    $mapGenStart = microtime(true);

    // –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ —Å–æ–∑–¥–∞—Å—Ç –ø–ª–∞–Ω–µ—Ç—É –∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–∞—Ä—Ç—É
    $game->create_new_game();

    $mapGenEnd = microtime(true);
    $mapGenTime = round($mapGenEnd - $mapGenStart, 2);

    echo "   ‚úì –ü–æ–ª–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ {$mapGenTime} —Å–µ–∫\n";

    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    echo "4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...\n";

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞–Ω–µ—Ç—ã
    $planetCount = MyDB::query("SELECT COUNT(*) FROM planet WHERE game_id = :game_id", ['game_id' => $game->id], 'elem');
    echo "   ‚úì –°–æ–∑–¥–∞–Ω–æ –ø–ª–∞–Ω–µ—Ç: $planetCount\n";

    if ($planetCount > 0) {
        $planet = MyDB::query("SELECT * FROM planet WHERE game_id = :game_id LIMIT 1", ['game_id' => $game->id], 'row');
        $planetId = $planet['id'];

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–µ—Ç–∫–∏ –∫–∞—Ä—Ç—ã
        $cellCount = MyDB::query("SELECT COUNT(*) FROM cell WHERE planet = :planet", ['planet' => $planetId], 'elem');
        $expectedCells = 80 * 80; // 6400
        echo "   ‚úì –°–æ–∑–¥–∞–Ω–æ –∫–ª–µ—Ç–æ–∫: $cellCount (–æ–∂–∏–¥–∞–ª–æ—Å—å: $expectedCells)\n";

        if ($cellCount == $expectedCells) {
            echo "   ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç—ã: –£–°–ü–ï–®–ù–û\n";
        } else {
            echo "   ‚ùå –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç—ã: –û–®–ò–ë–ö–ê - –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–µ—Ç–æ–∫\n";
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ—Å—É—Ä—Å—ã
        $resourceCount = MyDB::query("SELECT COUNT(*) FROM resource WHERE planet = :planet", ['planet' => $planetId], 'elem');
        echo "   ‚úì –°–æ–∑–¥–∞–Ω–æ —Ä–µ—Å—É—Ä—Å–æ–≤: $resourceCount\n";

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã –∫–ª–µ—Ç–æ–∫
        $cellTypes = MyDB::query("SELECT type, COUNT(*) as count FROM cell WHERE planet = :planet GROUP BY type", ['planet' => $planetId]);
        echo "   üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –∫–ª–µ—Ç–æ–∫:\n";
        foreach ($cellTypes as $typeInfo) {
            $percentage = round(($typeInfo['count'] / $cellCount) * 100, 1);
            echo "      {$typeInfo['type']}: {$typeInfo['count']} ({$percentage}%)\n";
        }

        if ($resourceCount > 0) {
            $resourceTypes = MyDB::query("SELECT type, COUNT(*) as count FROM resource WHERE planet = :planet GROUP BY type", ['planet' => $planetId]);
            echo "   üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:\n";
            foreach ($resourceTypes as $typeInfo) {
                $percentage = round(($typeInfo['count'] / $resourceCount) * 100, 1);
                echo "      {$typeInfo['type']}: {$typeInfo['count']} ({$percentage}%)\n";
            }
        }
    }

    // 5. –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    $totalTime = round(microtime(true) - $startTime, 2);
    echo "\n5. –û—Ü–µ–Ω–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:\n";
    echo "   ‚è±Ô∏è  –û–±—â–µ–µ –≤—Ä–µ–º—è: {$totalTime} —Å–µ–∫\n";
    echo "   ‚è±Ô∏è  –í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã: {$mapGenTime} —Å–µ–∫\n";

    $memoryUsed = round(memory_get_peak_usage() / 1024 / 1024, 2);
    echo "   üíæ –ú–∞–∫—Å–∏–º—É–º –ø–∞–º—è—Ç–∏: {$memoryUsed} MB\n";

    // –û—Ü–µ–Ω–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    if ($totalTime < 5) {
        echo "   üöÄ –û–¢–õ–ò–ß–ù–ê–Ø –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨: < 5 —Å–µ–∫\n";
    } elseif ($totalTime < 15) {
        echo "   ‚úÖ –•–û–†–û–®–ê–Ø –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨: < 15 —Å–µ–∫\n";
    } elseif ($totalTime < 60) {
        echo "   ‚ö†Ô∏è  –ü–†–ò–ï–ú–õ–ï–ú–ê–Ø –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨: < 1 –º–∏–Ω\n";
    } else {
        echo "   ‚ùå –ú–ï–î–õ–ï–ù–ù–ê–Ø –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨: > 1 –º–∏–Ω\n";
    }

    // 6. –¢–µ—Å—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ - SQL –∏–Ω—ä–µ–∫—Ü–∏–∏
    echo "\n6. –¢–µ—Å—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (SQL –∏–Ω—ä–µ–∫—Ü–∏–∏)...\n";

    try {
        $maliciousGame = new Game([
            'name' => "'; DROP TABLE game; --",
            'map_w' => 50,
            'map_h' => 50,
            'turn_type' => 'byturn'
        ]);
        $maliciousGame->save();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞
        $gameCount = MyDB::query("SELECT COUNT(*) FROM game", [], 'elem');
        if ($gameCount >= 2) { // –ù–∞—à–∞ –∏–≥—Ä–∞ + –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω–∞—è
            echo "   ‚úÖ SQL –∏–Ω—ä–µ–∫—Ü–∏–∏: –ó–ê–©–ò–©–ï–ù–û\n";
        } else {
            echo "   ‚ùå SQL –∏–Ω—ä–µ–∫—Ü–∏–∏: –£–Ø–ó–í–ò–ú–û\n";
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã
        $savedGame = MyDB::query("SELECT * FROM game WHERE id = :id", ['id' => $maliciousGame->id], 'row');
        if ($savedGame && $savedGame['name'] === "'; DROP TABLE game; --") {
            echo "   ‚úÖ –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: –†–ê–ë–û–¢–ê–ï–¢\n";
        } else {
            echo "   ‚ùå –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: –ù–ï –†–ê–ë–û–¢–ê–ï–¢\n";
        }

    } catch (Exception $e) {
        echo "   ‚ö†Ô∏è  SQL –∏–Ω—ä–µ–∫—Ü–∏—è –≤—ã–∑–≤–∞–ª–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: " . $e->getMessage() . "\n";
    }

    // 7. –û—á–∏—Å—Ç–∫–∞
    echo "\n7. –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...\n";
    MyDB::query("DELETE FROM resource");
    MyDB::query("DELETE FROM cell");
    MyDB::query("DELETE FROM user");
    MyDB::query("DELETE FROM planet");
    MyDB::query("DELETE FROM game");
    echo "   ‚úì –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã\n";

    // –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞
    echo "\n" . str_repeat("=", 50) . "\n";
    echo "üéâ –ò–ù–¢–ï–ì–†–ê–¶–ò–û–ù–ù–´–ô –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!\n";
    echo str_repeat("=", 50) . "\n";

    echo "\nüìà –î–û–°–¢–ò–ñ–ï–ù–ò–Ø:\n";
    echo "‚úÖ –ö–∞—Ä—Ç–∞ {$game->map_w}x{$game->map_h} —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ –∑–∞ {$mapGenTime} —Å–µ–∫\n";
    echo "‚úÖ –°–æ–∑–¥–∞–Ω–æ $cellCount –∫–ª–µ—Ç–æ–∫ –∏ $resourceCount —Ä–µ—Å—É—Ä—Å–æ–≤\n";
    echo "‚úÖ 4 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã\n";
    echo "‚úÖ –¢–µ—Å—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω—ã\n";
    echo "‚úÖ –û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {$totalTime} —Å–µ–∫\n";
    echo "‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –ø–∞–º—è—Ç–∏: {$memoryUsed} MB\n";

    if ($mapGenTime < 2) {
        echo "\nüèÜ –ü–†–ï–í–û–°–•–û–î–ù–û! –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç—ã —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ 100+ —Ä–∞–∑ –±—ã—Å—Ç—Ä–µ–µ!\n";
    } elseif ($mapGenTime < 10) {
        echo "\nü•á –û–¢–õ–ò–ß–ù–û! –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏!\n";
    } else {
        echo "\n‚úÖ –•–û–†–û–®–û! –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã\n";
    }

} catch (Exception $e) {
    echo "‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: " . $e->getMessage() . "\n";
    echo "–°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤:\n" . $e->getTraceAsString() . "\n";

    // –ü–æ–ø—ã—Ç–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    try {
        MyDB::query("DELETE FROM resource");
        MyDB::query("DELETE FROM cell");
        MyDB::query("DELETE FROM user");
        MyDB::query("DELETE FROM planet");
        MyDB::query("DELETE FROM game");
        echo "   ‚úì –ê–≤–∞—Ä–∏–π–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞\n";
    } catch (Exception $cleanupError) {
        echo "   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤–∞—Ä–∏–π–Ω–æ–π –æ—á–∏—Å—Ç–∫–µ: " . $cleanupError->getMessage() . "\n";
    }
}
